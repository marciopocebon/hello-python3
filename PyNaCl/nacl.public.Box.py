#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# sudo pip3 install PyNaCl

'''
class Box(encoding.Encodable, StringFixer, object):
    """
    The Box class boxes and unboxes messages between a pair of keys

    The ciphertexts generated by :class:`~nacl.public.Box` include a 16
    byte authenticator which is checked as part of the decryption. An invalid
    authenticator will cause the decrypt function to raise an exception. The
    authenticator is not a signature. Once you've decrypted the message you've
    demonstrated the ability to create arbitrary valid message, so messages you
    send are repudiable. For non-repudiable messages, sign them after
    encryption.

    :param private_key: :class:`~nacl.public.PrivateKey` used to encrypt and
        decrypt messages
    :param public_key: :class:`~nacl.public.PublicKey` used to encrypt and
        decrypt messages

    :cvar NONCE_SIZE: The size that the nonce is required to be.
    """

    NONCE_SIZE = nacl.bindings.crypto_box_NONCEBYTES

    def __init__(self, private_key, public_key):
        if private_key and public_key:
            if ((not isinstance(private_key, PrivateKey) or
                 not isinstance(public_key, PublicKey))):
                raise exc.TypeError("Box must be created from "
                                    "a PrivateKey and a PublicKey")
            self._shared_key = nacl.bindings.crypto_box_beforenm(
                public_key.encode(encoder=encoding.RawEncoder),
                private_key.encode(encoder=encoding.RawEncoder),
            )
        else:
            self._shared_key = None
'''

import nacl.utils
from nacl.public import PrivateKey
from nacl.public import Box


def nacl_public_Box():
    key1 = PrivateKey.generate()
    key2 = PrivateKey.generate()

    box1 = Box(key1, key2.public_key)
    text = "hello, sodium crypt library"

    encrypted = box1.encrypt(text.encode())
    decrypted = box1.decrypt(encrypted)

    print(text, encrypted, decrypted, sep='\n')

    # hello, sodium crypt library
    # b'\x1f*\xc1N\xeeL\xd0`\x12b\x81\xc7\xd3\xa4\xd4\xdaM\x9e\x18\xd6\x85k\x1a\x9eS\te\x98B\xd1\xbf1+\xaf\xa9o\xa1W\x89\xb20\xfceb\xab\x03\xd1.\x9cS\xa62VPx\xa1hQ_\x00\xef\x9b\x0ft\xe5I\xd9'
    # b'hello, sodium crypt library'


if __name__ == '__main__':
    nacl_public_Box()

# reference
# https://github.com/pyca/pynacl
# https://pynacl.readthedocs.io/en/stable/public/#nacl-public-box